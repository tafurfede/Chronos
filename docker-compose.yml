version: '3.8'

services:
  # Main trading bot
  trading-bot:
    build: .
    container_name: ml-trading-bot
    env_file:
      - config/.env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./models:/app/models
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - trading-network

  # PostgreSQL database
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: trading-postgres
    environment:
      - POSTGRES_DB=ml_trading
      - POSTGRES_USER=trader
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - trading-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: trading-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading-network

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: trading-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    networks:
      - trading-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: trading-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - trading-network

  # Jupyter for analysis
  jupyter:
    image: jupyter/tensorflow-notebook:latest
    container_name: trading-jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-quantnexus}
    ports:
      - "8888:8888"
    volumes:
      - ./:/home/jovyan/work
      - jupyter_data:/home/jovyan
    networks:
      - trading-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: trading-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./reports:/usr/share/nginx/html
    depends_on:
      - grafana
      - jupyter
    networks:
      - trading-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:
  jupyter_data:

networks:
  trading-network:
    driver: bridge